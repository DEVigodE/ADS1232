classDiagram
    class Sexo {
        <<enumeration>>
        MASCULINO
        FEMININO
        OUTRO
    }

    class Passageiro {
        -String nome
        -Sexo sexo
        -Date dataDeNascimento
        -String email

        +Passageiro(String nome, Sexo sexo, Date dataDeNascimento, String email)
        +String getNome()
        +void setNome(String nome)
        +Sexo getSexo()
        +void setSexo(Sexo sexo)
        +Date getDataDeNascimento()
        +void setDataDeNascimento(Date dataDeNascimento)
        +String getEmail()
        +String getPrimeiroNome()
        +String toString()
    }

    class Corrida {
        -long id
        -String enderecoPartida
        -String enderecoDestino
        -Passageiro passageiro

        +Corrida()
        +Corrida(String enderecoPartida, String enderecoDestino, Passageiro passageiro)
        +long getId()
        +void setId(long id)
        +String getEnderecoPartida()
        +void setEnderecoPartida(String enderecoPartida)
        +String getEnderecoDestino()
        +void setEnderecoDestino(String enderecoDestino)
        +Passageiro getPassageiro()
        +void setPassageiro(Passageiro passageiro)
        +String toString()
    }

    class CentralDeInformacoes {
        -ArrayList~Passageiro~ todosOsPassageiros
        -ArrayList~Corrida~ todasAsCorridas

        +CentralDeInformacoes()
        +boolean adicionarPassageiro(Passageiro passageiro)
        +Passageiro recuperarPassageiroPeloEmail(String email)
        +ArrayList~Passageiro~ getTodosOsPassageiros()
        +void setTodosOsPassageiros(ArrayList~Passageiro~ todosOsPassageiros)
        +int getTotalPassageiros()
        +String exibirInformacoesPassageiro(Passageiro passageiro)
        +int calcularIdade(Date dataDeNascimento)
        +String listarTodosPassageiros()
        +boolean temPassageiros()
        +boolean adicionarCorrida(Corrida corrida)
        +Corrida recuperarCorridaPeloId(long id)
        +ArrayList~Corrida~ recuperarCorridasDeUmPassageiro(String emailPassageiro)
        +ArrayList~Corrida~ getTodasAsCorridas()
        +void setTodasAsCorridas(ArrayList~Corrida~ todasAsCorridas)
        +int getTotalCorridas()
        +String listarTodasCorridas()
        +boolean temCorridas()
        +String listarCorridasDeUmPassageiro(String emailPassageiro)
        -boolean temIdadeMinima(Date dataDeNascimento)
    }

    class App {
        -CentralDeInformacoes central$
        -Scanner scanner$

        +main(String[] args)$ void
        -inicializarSistema()$ void
        -exibirMenu()$ void
        -cadastrarNovoPassageiro()$ void
        -cadastrarNovaCorrida()$ void
        -coletarSexo()$ Sexo
        -coletarDataNascimento()$ Date
        -listarTodosPassageiros()$ void
        -listarTodasCorridas()$ void
        -listarCorridasDeUmPassageiro()$ void
        -exibirInformacoesPassageiro()$ void
    }

    Passageiro --> Sexo : uses
    Corrida --> Passageiro : contains
    CentralDeInformacoes --> Passageiro : manages
    CentralDeInformacoes --> Corrida : manages
    App --> CentralDeInformacoes : uses
    App --> Passageiro : creates
    App --> Corrida : creates
    App --> Scanner : uses
